{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\code-academy\\\\todoList-reduxToolkit\\\\frontend\\\\src\\\\components\\\\Footer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteTask, showAllTasks, showActiveTasks, showCompletedTasks } from '../store/slices/tasksSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Footer() {\n  _s();\n  const tasks = useSelector(state => state.tasks.tasks);\n  const completedTasksCount = tasks.filter(task => task.completed).length;\n  const incompleteTasksCount = tasks.length - completedTasksCount;\n  const dispatch = useDispatch();\n  const clearCompletedTasks = () => {\n    const completedTasks = tasks.filter(task => task.completed);\n    completedTasks.forEach(task => {\n      dispatch(deleteTask({\n        id: task.id\n      }));\n    });\n  };\n  const [activeButton, setActiveButton] = useState('All');\n  const handleButtonClick = buttonName => {\n    setActiveButton(buttonName);\n    switch (buttonName) {\n      case 'All':\n        dispatch(showAllTasks());\n        break;\n      case 'Active':\n        dispatch(showActiveTasks());\n        break;\n      case 'Completed':\n        dispatch(showCompletedTasks());\n        break;\n      default:\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"footer\", {\n    className: \"footer\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"todo-count\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: incompleteTasksCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), \" items left\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick('All'),\n        style: {\n          border: activeButton === 'All' ? '1px solid black' : 'none',\n          marginRight: '30px',\n          cursor: 'pointer'\n        },\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick('Active'),\n        style: {\n          border: activeButton === 'Active' ? '1px solid black' : 'none',\n          marginRight: '30px',\n          cursor: 'pointer'\n        },\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick('Completed'),\n        style: {\n          border: activeButton === 'Completed' ? '1px solid black' : 'none',\n          marginRight: '30px',\n          cursor: 'pointer'\n        },\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"clear-completed\",\n      onClick: clearCompletedTasks,\n      children: \"Clear completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Footer, \"Pa1yxWNznddEjIQqUvc0CJ4ArE4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Footer;\nexport default Footer;\nvar _c;\n$RefreshReg$(_c, \"Footer\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","deleteTask","showAllTasks","showActiveTasks","showCompletedTasks","jsxDEV","_jsxDEV","Footer","_s","tasks","state","completedTasksCount","filter","task","completed","length","incompleteTasksCount","dispatch","clearCompletedTasks","completedTasks","forEach","id","activeButton","setActiveButton","handleButtonClick","buttonName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","border","marginRight","cursor","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/code-academy/todoList-reduxToolkit/frontend/src/components/Footer.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  deleteTask,\r\n  showAllTasks,\r\n  showActiveTasks,\r\n  showCompletedTasks,\r\n} from '../store/slices/tasksSlice';\r\n\r\nfunction Footer() {\r\n  const tasks = useSelector((state) => state.tasks.tasks);\r\n  const completedTasksCount = tasks.filter((task) => task.completed).length;\r\n  const incompleteTasksCount = tasks.length - completedTasksCount;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const clearCompletedTasks = () => {\r\n    const completedTasks = tasks.filter((task) => task.completed);\r\n    completedTasks.forEach((task) => {\r\n      dispatch(deleteTask({ id: task.id }));\r\n    });\r\n  };\r\n\r\n  const [activeButton, setActiveButton] = useState('All');\r\n\r\n  const handleButtonClick = (buttonName) => {\r\n    setActiveButton(buttonName);\r\n\r\n    switch (buttonName) {\r\n      case 'All':\r\n        dispatch(showAllTasks());\r\n        break;\r\n      case 'Active':\r\n        dispatch(showActiveTasks());\r\n        break;\r\n      case 'Completed':\r\n        dispatch(showCompletedTasks());\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <footer className=\"footer\">\r\n      <span className=\"todo-count\">\r\n        <strong>{incompleteTasksCount}</strong> items left\r\n      </span>\r\n      <div className=\"filter\">\r\n        <button\r\n          onClick={() => handleButtonClick('All')}\r\n          style={{\r\n            border: activeButton === 'All' ? '1px solid black' : 'none',\r\n            marginRight: '30px',\r\n            cursor: 'pointer',\r\n          }}\r\n        >\r\n          All\r\n        </button>\r\n        <button\r\n          onClick={() => handleButtonClick('Active')}\r\n          style={{\r\n            border: activeButton === 'Active' ? '1px solid black' : 'none',\r\n            marginRight: '30px',\r\n            cursor: 'pointer',\r\n          }}\r\n        >\r\n          Active\r\n        </button>\r\n        <button\r\n          onClick={() => handleButtonClick('Completed')}\r\n          style={{\r\n            border: activeButton === 'Completed' ? '1px solid black' : 'none',\r\n            marginRight: '30px',\r\n            cursor: 'pointer',\r\n          }}\r\n        >\r\n          Completed\r\n        </button>\r\n      </div>\r\n      <button className=\"clear-completed\" onClick={clearCompletedTasks}>\r\n        Clear completed\r\n      </button>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}