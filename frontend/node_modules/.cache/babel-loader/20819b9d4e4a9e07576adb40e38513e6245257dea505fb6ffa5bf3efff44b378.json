{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\code-academy\\\\todoList-reduxToolkit\\\\frontend\\\\src\\\\components\\\\Header.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addTask } from '../store/slices/tasksSlice';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Header() {\n  _s();\n  const [value, setValue] = useState('');\n  const dispatch = useDispatch();\n\n  // const onSubmit = (event) => {\n  // \tevent.preventDefault();\n\n  // \tif (value.trim().length === 0) {\n  // \t\talert(\"Input cannot be empty!\");\n  // \t\tsetValue(\"\");\n  // \t\treturn;\n  // \t}\n\n  // \tdispatch(\n  // \t\taddTask({\n  // \t\t\ttask: value\n  // \t\t})\n  // \t);\n\n  // \tsetValue(\"\");\n  // };\n  const onSubmit = async event => {\n    event.preventDefault();\n    if (value.trim().length === 0) {\n      alert(\"Input cannot be empty!\");\n      setValue(\"\");\n      return;\n    }\n    try {\n      const response = await axios.post('/api/tasks', {\n        task: value\n      });\n      dispatch(addTask({\n        task: value\n      }));\n      console.log(response.data); // İsteğin yanıtını konsola yazdırabilirsiniz\n    } catch (error) {\n      console.error(error);\n    }\n    setValue(\"\");\n  };\n  function enter(event) {\n    if (event.key === 'Enter') {\n      onSubmit(event);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    class: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setValue(e.target.value),\n        class: \"new-todo\",\n        placeholder: \"What needs to be done?\",\n        autoFocus: true,\n        value: value,\n        onKeyPress: enter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }, this);\n}\n_s(Header, \"25hq+FWXfHdx95IzyHJ1zMA6TDk=\", false, function () {\n  return [useDispatch];\n});\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useDispatch","addTask","axios","jsxDEV","_jsxDEV","Header","_s","value","setValue","dispatch","onSubmit","event","preventDefault","trim","length","alert","response","post","task","console","log","data","error","enter","key","class","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","placeholder","autoFocus","onKeyPress","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/code-academy/todoList-reduxToolkit/frontend/src/components/Header.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { addTask } from '../store/slices/tasksSlice';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction Header() {\r\n\r\n\r\n\tconst [value, setValue] = useState('');\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\t// const onSubmit = (event) => {\r\n\t// \tevent.preventDefault();\r\n\r\n\t// \tif (value.trim().length === 0) {\r\n\t// \t\talert(\"Input cannot be empty!\");\r\n\t// \t\tsetValue(\"\");\r\n\t// \t\treturn;\r\n\t// \t}\r\n\r\n\t// \tdispatch(\r\n\t// \t\taddTask({\r\n\t// \t\t\ttask: value\r\n\t// \t\t})\r\n\t// \t);\r\n\r\n\t// \tsetValue(\"\");\r\n\t// };\r\n\tconst onSubmit = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\r\n\t\tif (value.trim().length === 0) {\r\n\t\t\talert(\"Input cannot be empty!\");\r\n\t\t\tsetValue(\"\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\r\n\t\ttry {\r\n\t\t\tconst response = await axios.post('/api/tasks', { task: value });\r\n\t\t\tdispatch(\r\n\t\t\t\taddTask({\r\n\t\t\t\t\ttask: value\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tconsole.log(response.data); // İsteğin yanıtını konsola yazdırabilirsiniz\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t\r\n\t\tsetValue(\"\");\r\n\t};\r\n\t\r\n\t\r\n\r\n\r\n\tfunction enter(event) {\r\n\t\tif (event.key === 'Enter') {\r\n\t\t\tonSubmit(event)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<header class=\"header\">\r\n\t\t\t<h1>todos</h1>\r\n\t\t\t<form>\r\n\t\t\t\t<input onChange={(e) => setValue(e.target.value)} class=\"new-todo\" placeholder=\"What needs to be done?\" autoFocus value={value}\r\n\t\t\t\t\tonKeyPress={enter} />\r\n\t\t\t</form>\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\nexport default Header\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,OAAO,QAAQ,4BAA4B;AACpD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAGjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;;EAE9B;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA,MAAMU,QAAQ,GAAG,MAAOC,KAAK,IAAK;IACjCA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAIL,KAAK,CAACM,IAAI,CAAC,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE;MAC9BC,KAAK,CAAC,wBAAwB,CAAC;MAC/BP,QAAQ,CAAC,EAAE,CAAC;MACZ;IACD;IAEA,IAAI;MACH,MAAMQ,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,YAAY,EAAE;QAAEC,IAAI,EAAEX;MAAM,CAAC,CAAC;MAChEE,QAAQ,CACPR,OAAO,CAAC;QACPiB,IAAI,EAAEX;MACP,CAAC,CACF,CAAC;MACDY,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACfH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;IACrB;IAEAd,QAAQ,CAAC,EAAE,CAAC;EACb,CAAC;EAKD,SAASe,KAAKA,CAACZ,KAAK,EAAE;IACrB,IAAIA,KAAK,CAACa,GAAG,KAAK,OAAO,EAAE;MAC1Bd,QAAQ,CAACC,KAAK,CAAC;IAChB;EACD;EAEA,oBACCP,OAAA;IAAQqB,KAAK,EAAC,QAAQ;IAAAC,QAAA,gBACrBtB,OAAA;MAAAsB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACd1B,OAAA;MAAAsB,QAAA,eACCtB,OAAA;QAAO2B,QAAQ,EAAGC,CAAC,IAAKxB,QAAQ,CAACwB,CAAC,CAACC,MAAM,CAAC1B,KAAK,CAAE;QAACkB,KAAK,EAAC,UAAU;QAACS,WAAW,EAAC,wBAAwB;QAACC,SAAS;QAAC5B,KAAK,EAAEA,KAAM;QAC9H6B,UAAU,EAAEb;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEX;AAACxB,EAAA,CAlEQD,MAAM;EAAA,QAKGL,WAAW;AAAA;AAAAqC,EAAA,GALpBhC,MAAM;AAoEf,eAAeA,MAAM;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}