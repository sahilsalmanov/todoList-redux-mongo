{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\code-academy\\\\todoList-reduxToolkit\\\\frontend\\\\src\\\\components\\\\TodoItem.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { toggleTask, deleteTask } from '../store/slices/tasksSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TodoItem = _ref => {\n  _s();\n  let {\n    id,\n    title\n  } = _ref;\n  const dispatch = useDispatch();\n  const [completed, setCompleted] = useState(false);\n  const toggleCompleted = () => {\n    dispatch(toggleTask({\n      id\n    }));\n    setCompleted(!completed);\n  };\n  const removeTask = () => {\n    dispatch(deleteTask({\n      id\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: completed ? 'completed' : '',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"toggle\",\n          type: \"checkbox\",\n          checked: completed,\n          onChange: toggleCompleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: removeTask,\n          className: \"destroy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(TodoItem, \"xGmpc8kNGCNupKSN/Za+9Z8rInw=\", false, function () {\n  return [useDispatch];\n});\n_c = TodoItem;\nexport default TodoItem;\nvar _c;\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"names":["React","useState","useDispatch","toggleTask","deleteTask","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoItem","_ref","_s","id","title","dispatch","completed","setCompleted","toggleCompleted","removeTask","children","className","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/code-academy/todoList-reduxToolkit/frontend/src/components/TodoItem.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleTask, deleteTask } from '../store/slices/tasksSlice';\r\n\r\nconst TodoItem = ({ id, title }) => {\r\n  const dispatch = useDispatch();\r\n  const [completed, setCompleted] = useState(false);\r\n\r\n  const toggleCompleted = () => {\r\n    dispatch(toggleTask({ id }));\r\n\tsetCompleted(!completed)\r\n  };\r\n\r\n  const removeTask = () => {\r\n    dispatch(deleteTask({ id }));\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <li className={completed ? 'completed' : ''}>\r\n        <div className=\"view\">\r\n          <input\r\n            className=\"toggle\"\r\n            type=\"checkbox\"\r\n            checked={completed}\r\n            onChange={toggleCompleted}\r\n          />\r\n          <label>{title}</label>\r\n          <button onClick={removeTask} className=\"destroy\"></button>\r\n        </div>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,UAAU,EAAEC,UAAU,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpE,MAAMC,QAAQ,GAAGC,IAAA,IAAmB;EAAAC,EAAA;EAAA,IAAlB;IAAEC,EAAE;IAAEC;EAAM,CAAC,GAAAH,IAAA;EAC7B,MAAMI,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMgB,eAAe,GAAGA,CAAA,KAAM;IAC5BH,QAAQ,CAACX,UAAU,CAAC;MAAES;IAAG,CAAC,CAAC,CAAC;IAC/BI,YAAY,CAAC,CAACD,SAAS,CAAC;EACvB,CAAC;EAED,MAAMG,UAAU,GAAGA,CAAA,KAAM;IACvBJ,QAAQ,CAACV,UAAU,CAAC;MAAEQ;IAAG,CAAC,CAAC,CAAC;EAC9B,CAAC;EAID,oBACEN,OAAA,CAAAE,SAAA;IAAAW,QAAA,eACEb,OAAA;MAAIc,SAAS,EAAEL,SAAS,GAAG,WAAW,GAAG,EAAG;MAAAI,QAAA,eAC1Cb,OAAA;QAAKc,SAAS,EAAC,MAAM;QAAAD,QAAA,gBACnBb,OAAA;UACEc,SAAS,EAAC,QAAQ;UAClBC,IAAI,EAAC,UAAU;UACfC,OAAO,EAAEP,SAAU;UACnBQ,QAAQ,EAAEN;QAAgB;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B,CAAC,eACFrB,OAAA;UAAAa,QAAA,EAAQN;QAAK;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACtBrB,OAAA;UAAQsB,OAAO,EAAEV,UAAW;UAACE,SAAS,EAAC;QAAS;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC,gBACL,CAAC;AAEP,CAAC;AAAChB,EAAA,CA/BIF,QAAQ;EAAA,QACKP,WAAW;AAAA;AAAA2B,EAAA,GADxBpB,QAAQ;AAiCd,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}